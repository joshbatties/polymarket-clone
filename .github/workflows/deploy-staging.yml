name: Deploy to Staging

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  
jobs:
  deploy-api:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build API
        run: |
          cd apps/api
          pnpm run build
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Deploy to staging
        run: |
          echo "üöÄ Deploying API to staging environment"
          echo "This will be implemented based on chosen deployment method:"
          echo "- Option 1: ECS with ECR"
          echo "- Option 2: Fly.io"
          echo "- Option 3: AWS App Runner"
          # Actual deployment commands will be added here
          
  build-mobile:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest
        
      - name: Setup EAS CLI
        run: npm install -g eas-cli@latest
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Install dependencies
        run: |
          cd apps/mobile
          pnpm install --frozen-lockfile
          
      - name: EAS Build (iOS Simulator)
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd apps/mobile
          eas build --platform ios --profile development --non-interactive
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mobile-build-staging
          path: apps/mobile/build/
          retention-days: 30

  notify-deployment:
    runs-on: ubuntu-latest
    needs: [deploy-api, build-mobile]
    if: always()
    
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy-api.result }}" == "success" ] && [ "${{ needs.build-mobile.result }}" == "success" ]; then
            echo "‚úÖ Staging deployment successful"
          else
            echo "‚ùå Staging deployment failed"
            exit 1
          fi
